{"version":3,"sources":["components/redux/actions/fetchStats.js","components/CardItem.js","components/redux/actions/fetchDrivers.js","components/redux/types/newVote.js","components/CardList.js","components/redux/types/newStats.js","components/redux/reducers/driversReducer.js","components/redux/reducers/index.js","components/redux/store/store.js","App.js","index.js"],"names":["parser","require","requestOptions","method","redirect","CardItem","props","imagePicker","id","data","filter","el","img","handleClick","e","preventDefault","setState","isFlipped","state","this","Card","style","border","className","Img","variant","src","driver","driverId","Body","Text","GivenName","FamilyName","Badge","pill","onClick","addVote","bind","idx","stats","wins","Date","getFullYear","constructor","Name","position","points","Component","connect","i","type","CardList","fetchStats","driversItems","drivers","map","Driver","Constructor","display","justifyContent","flexWrap","dispatch","fetch","then","response","text","xml2json","catch","err","console","log","defaultState","driversReducer","action","MRData","StandingsTable","StandingsList","DriverStanding","obj","slice","Number","rootReducer","combineReducers","middleWare","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","a","App","Container","Jumbotron","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cffe4aec.chunk.js","sourcesContent":["import NEW_STATS from '../types/newStats';\nvar parser = require('xml2json-light');\n\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow'\n};\n\nexport const fetchStats = () => dispatch => {\n  fetch(\"https://ergast.com/api/f1/current/driverStandings\", requestOptions)\n    .then(response => response.text())\n    .then(data =>\n      dispatch({\n        type: NEW_STATS,\n        stats: parser.xml2json(data)\n      })\n    )\n    .catch(err => console.log(err));\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addVote } from './redux/actions/fetchDrivers';\nimport { Card, Badge } from 'react-bootstrap';\nimport ReactCardFlip from 'react-card-flip';\nimport data from '../data/data.json'\n\nclass CardItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false\n    };\n  }\n\n  imagePicker = id => {\n    const img = data.filter(el => el.id === id)\n    return img[0].img;\n  }\n\n  handleClick = e => {\n    e.preventDefault();\n    this.setState({ isFlipped: !this.state.isFlipped });\n  };\n\n  render() {\n    return (\n      <ReactCardFlip\n        isFlipped={this.state.isFlipped}\n      >\n        <Card\n          style={{\n            border: 'none'\n          }}\n          className=\"bg-secondary card-front\"\n\n        >\n          <span className=\"span one\"></span>\n          <span className=\"span two\"></span>\n          <span className=\"span three\"></span>\n          <span className=\"span four\"></span>\n          <Card.Img variant=\"top\" src={`${this.imagePicker(this.props.driver.driverId)}`} />\n          <Card.Body>\n            <Card.Text className=\"text-white d-flex justify-content-between\">\n              {this.props.driver.GivenName} {this.props.driver.FamilyName}\n              <Badge\n                pill\n                variant=\"light\"\n                className=\"py-1 px-2 align-self-center btn\"\n                onClick={this.handleClick}\n              >\n                Stats\n              </Badge>\n              <Badge\n                pill\n                variant=\"light\"\n                className=\"py-1 px-2 align-self-center btn\"\n                onClick={this.props.addVote.bind(null, this.props.idx)}\n              >\n                Votes: {this.props.stats.wins}\n              </Badge>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card\n          style={{\n            border: 'none',\n          }}\n          className=\"bg-secondary\"\n        >\n          <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\n            <Card.Text className=\"text-white\">\n              Season: {new Date().getFullYear()}\n            </Card.Text>\n            <Card.Text className=\"text-white\">\n              Team: {this.props.constructor.Name}\n            </Card.Text>\n            <Card.Text className=\"text-white\">\n              Ranking: {this.props.stats.position}\n            </Card.Text>\n            {/* <Card.Text className=\"text-white\">\n              Wins: {this.props.stats.wins}\n            </Card.Text> */}\n            <Card.Text className=\"text-white\">\n              Points: {this.props.stats.points}\n            </Card.Text>\n            <Badge\n              pill\n              variant=\"light\"\n              className=\"py-1 px-2 align-self-center btn\"\n              onClick={this.handleClick}\n            >\n              Go Back\n            </Badge>\n          </Card.Body>\n        </Card>\n      </ReactCardFlip >\n    );\n  }\n}\n\nexport default connect(null, { addVote })(CardItem);\n\n","// import NEW_DRIVERS from '../types/newDrivers';\r\nimport NEW_VOTE from '../types/newVote';\r\n\r\n// export const fetchDrivers = () => dispatch => {\r\n//     fetch('http://localhost:3000/drivers')\r\n//       .then(res => res.json())\r\n//       .then(data =>\r\n//         dispatch({\r\n//           type: NEW_DRIVERS,\r\n//           drivers: data\r\n//         })\r\n//       )\r\n//       .catch(err => console.log(err));\r\n//   };\r\n\r\nexport const addVote = i => {\r\n  return {\r\n    type: NEW_VOTE,\r\n    i\r\n  };\r\n};\r\n","const NEW_VOTE = 'NEW_VOTE';\r\n\r\nexport default NEW_VOTE;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { fetchDrivers } from './redux/actions/fetchDrivers';\nimport { fetchStats } from './redux/actions/fetchStats';\nimport CardItem from '../components/CardItem';\n\n\nclass CardList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false\n    };\n  }\n\n  componentDidMount() {\n    // this.props.fetchDrivers();\n    this.props.fetchStats();\n  }\n\n  render() {\n    const driversItems = this.props.drivers.drivers.map((driver, idx) => (\n      <CardItem stats={driver} driver={driver.Driver} idx={idx} constructor={driver.Constructor} />\n    ));\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap'\n        }}\n      >\n        {driversItems}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  drivers: state.drivers,\n});\n\nexport default connect(mapStateToProps, { fetchStats })(CardList);\n","const NEW_STATS = 'NEW_STATS';\n\nexport default NEW_STATS;\n","// import NEW_DRIVERS from '../types/newDrivers';\r\nimport NEW_STATS from '../types/newStats';\r\nimport NEW_VOTE from '../types/newVote';\r\n\r\n\r\nconst defaultState = {\r\n  drivers: []\r\n};\r\n\r\nconst driversReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case NEW_DRIVERS:\r\n    //   return {\r\n    //     ...state,\r\n    //     drivers: action.drivers\r\n    //   };\r\n\r\n    case NEW_STATS:\r\n      return {\r\n        ...state,\r\n        drivers: action.stats.MRData.StandingsTable.StandingsList.DriverStanding\r\n      };\r\n\r\n    case NEW_VOTE:\r\n      console.log('I Voted');\r\n      const i = action.i;\r\n      const obj = state.drivers;\r\n      return {\r\n        ...state,\r\n        drivers: [\r\n          ...obj.slice(0, i), // before the one we are updating\r\n          { ...obj[i], wins: Number(obj[i].wins + 1) },\r\n          ...obj.slice(i + 1) // after the one we are updating\r\n        ]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default driversReducer;\r\n","import { combineReducers } from 'redux';\r\nimport driversReducer from './driversReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  drivers: driversReducer,\r\n\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"undefined\"\r\n      ? a => a\r\n      : window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React from 'react';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CardList from './components/CardList';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store/store';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Container>\n        <Jumbotron className=\"shadow\">\n          <Jumbotron className=\"bg-dark\">\n            <h1 className=\"header text-center color-white text-white mb-0\">\n              Vote for your favorite F1&nbsp;driver!\n            </h1>\n            <CardList />\n          </Jumbotron>\n        </Jumbotron>\n      </Container>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}